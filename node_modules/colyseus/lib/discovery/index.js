"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const public_ip_1 = __importDefault(require("public-ip"));
const NODES_SET = 'colyseus:nodes';
const DISCOVERY_CHANNEL = 'colyseus:nodes:discovery';
function getNodeAddress(node, cb) {
    public_ip_1.default.v4().then((publicAddress) => {
        return cb(node.processId + '/' + publicAddress + ':' + node.port);
    });
}
function registerNode(presence, node) {
    getNodeAddress(node, (nodeAddress) => {
        presence.sadd(NODES_SET, nodeAddress);
        presence.publish(DISCOVERY_CHANNEL, `add,${nodeAddress}`);
    });
}
exports.registerNode = registerNode;
function unregisterNode(presence, node) {
    getNodeAddress(node, (nodeAddress) => {
        presence.srem(NODES_SET, nodeAddress);
        presence.publish(DISCOVERY_CHANNEL, `remove,${nodeAddress}`);
    });
}
exports.unregisterNode = unregisterNode;

{
  "_args": [
    [
      "httpie@^2.0.0-next.2",
      "/home/enrique/Documentos/entregas uoc/js/entrega/Colyseus/colyseus-examples/node_modules/colyseus.js"
    ]
  ],
  "_from": "httpie@>=2.0.0-next.2 <3.0.0",
  "_hasShrinkwrap": false,
  "_id": "httpie@2.0.0-next.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/httpie",
  "_nodeVersion": "10.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/httpie_2.0.0-next.2_1558723600514_0.7190269548902066"
  },
  "_npmUser": {
    "email": "luke@lukeed.com",
    "name": "lukeed"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "name": "httpie",
    "raw": "httpie@^2.0.0-next.2",
    "rawSpec": "^2.0.0-next.2",
    "scope": null,
    "spec": ">=2.0.0-next.2 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/colyseus.js"
  ],
  "_resolved": "https://registry.npmjs.org/httpie/-/httpie-2.0.0-next.2.tgz",
  "_shasum": "c858f135b09265b2adb7d318198f1822d87253aa",
  "_shrinkwrap": null,
  "_spec": "httpie@^2.0.0-next.2",
  "_where": "/home/enrique/Documentos/entregas uoc/js/entrega/Colyseus/colyseus-examples/node_modules/colyseus.js",
  "author": {
    "email": "luke.edwards05@gmail.com",
    "name": "Luke Edwards",
    "url": "lukeed.com"
  },
  "browser": "dist/httpie.esm.js",
  "bugs": {
    "url": "https://github.com/lukeed/httpie/issues"
  },
  "dependencies": {},
  "description": "A lightweight, Promise-based wrapper for Node.js HTTP requests~!",
  "devDependencies": {
    "bundt": "^0.4.0",
    "esm": "^3.2.0",
    "tap-spec": "^5.0.0",
    "tape": "^4.9.1"
  },
  "directories": {},
  "dist": {
    "fileCount": 8,
    "integrity": "sha512-QcYtyrn69p9VDy9SCNCDWAKmSz+wCHII4dc3fnHKA05ePiTeeltLvnnq+FyQPnsOrtpmLPd805FbmcXhtMljtA==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc6DwRCRA9TVsSAnZWagAAJjkP/21t8wtiwhsvGxKdYXEW\n7FUShGvInBbtKCs/6V5mAIRLUGu0byFHYAA4faE50xzQ1ux46vKI3q0GjP6u\nEQAHPUJ3T3OP3zycA8V3+DpROnTU7oi3WtCHGJRYqfSbpqULE453t88C7Edu\ny0J5SgQ1H2edIxKIXnwsDWRMYzKxJ8scMsRoGgZEUWcWMHe1SQK7Mt6myi56\nMZNBSpR7On8arlkCeWNbLWeKRn7E9V7cFS5TEtEURz7hEVi+3+EwWYYzLziJ\nfdgcKDgYFbMqQ62PgXD4kCn2RvTa7fU/Xw6EZ/wfvI8Qg9OqbMzsPFmbPuS9\n4RWqwJE+vIiC4Hd+TlBH1LCB53ox9C55UypxN806KOjkbfcjXLfGKMphSVVR\nSG9IidIKGkUqqIetSOJOopEEArkOApDBXw2u+Qz3ak+TQI8c6Wbcxz6ma8VY\nE7ZLY6n4OVM4f7erOf5byWUfZsMRpC22CjkaCZEPHsL3uPk9wUF11mujYSQI\nFURt6kEaPjPnBFMJ17RZzAYiPjaaTWcREn2bdHpMlLNSuxfh/uXRp5Hg+5zs\n6/EKRSjc6u9l2Cc6166oF5qLhTzcM7eG4qwRWJSW2yv/9McctH82oKQ3899Q\nOkVOI1HgGRk9SYcFJZ52SlUYQRjbqJrj4jOq8dm9KPngJOKQGdW1SfxT0+gF\naYSq\r\n=+BWB\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "c858f135b09265b2adb7d318198f1822d87253aa",
    "tarball": "https://registry.npmjs.org/httpie/-/httpie-2.0.0-next.2.tgz",
    "unpackedSize": 15950
  },
  "engines": {
    "node": ">=8"
  },
  "gitHead": "e58331a12d9b4b5b7dd0a37fc0de57555158e1ca",
  "homepage": "https://github.com/lukeed/httpie#readme",
  "keywords": [
    "client",
    "http",
    "promise",
    "request"
  ],
  "license": "MIT",
  "main": "dist/httpie.js",
  "maintainers": [
    {
      "name": "lukeed",
      "email": "luke@lukeed.com"
    }
  ],
  "module": "dist/httpie.mjs",
  "name": "httpie",
  "optionalDependencies": {},
  "readme": "<div align=\"center\">\n  <img src=\"logo.png\" alt=\"httpie\" height=\"190\" />\n</div>\n\n<div align=\"center\">\n  <a href=\"https://npmjs.org/package/httpie\">\n    <img src=\"https://badgen.now.sh/npm/v/httpie\" alt=\"version\" />\n  </a>\n  <a href=\"https://travis-ci.org/lukeed/httpie\">\n    <img src=\"https://badgen.now.sh/travis/lukeed/httpie\" alt=\"travis\" />\n  </a>\n  <a href=\"https://codecov.io/gh/lukeed/httpie\">\n    <img src=\"https://badgen.now.sh/codecov/c/github/lukeed/httpie\" alt=\"codecov\" />\n  </a>\n  <a href=\"https://npmjs.org/package/httpie\">\n    <img src=\"https://badgen.now.sh/npm/dm/httpie\" alt=\"downloads\" />\n  </a>\n</div>\n\n<div align=\"center\">A Node.js HTTP client as easy as pie!</div>\n\n## Features\n\n* `Promise`- based HTTP requestor\n* Works with HTTP and HTTPS protocols\n* Automatically handles JSON requests and responses\n* Extremely lightweight with **no dependencies** 678 bytes!\n* Includes aliases for common HTTP verbs: `get`, `post`, `put`, `patch`, and `del`\n\nAdditionally, this module is delivered as:\n\n* **ES Module**: [`dist/httpie.mjs`](https://unpkg.com/httpie/dist/httpie.mjs)\n* **CommonJS**: [`dist/httpie.js`](https://unpkg.com/httpie/dist/httpie.js)\n\n\n## Install\n\n```\n$ npm install --save httpie\n```\n\n\n## Usage\n\n> **Note:** The `async` syntax is for demo purposes – you may use Promises in a Node 6.x environment too!\n\n```js\nimport { get, post } from 'httpie';\n\ntry {\n  const { data } = await get('https://pokeapi.co/api/v2/pokemon/1');\n\n  // Demo: Endpoint will echo what we've sent\n  const res = await post('https://jsonplaceholder.typicode.com/posts', {\n    body: {\n      id: data.id,\n      name: data.name,\n      number: data.order,\n      moves: data.moves.slice(0, 6)\n    }\n  });\n\n  console.log(res.statusCode); //=> 201\n  console.log(res.data); //=> { id: 1, name: 'bulbasaur', number: 1, moves: [{...}, {...}] }\n} catch (err) {\n  console.error('Error!', err.statusCode, err.message);\n  console.error('~> headers:', err.headers);\n  console.error('~> data:', err.data);\n}\n```\n\n\n## API\n\n### send(method, url, opts={})\nReturns: `Promise`\n\nAny `httpie.send` request (and its aliases) will always return a Promise.\n\nIf the response's `statusCode` is 400 or above, this Promise will reject with a formatted error – see [Error Handling](#error-handling). Otherwise, the Promise will resolve with the full [`ClientRequest`](https://nodejs.org/api/http.html#http_class_http_clientrequest) stream.\n\nThe resolved response will receive a new `data` key, which will contain the response's full payload. Should the response return JSON content, then `httpie` will parse it and the `res.data` value will be the resulting JSON object!\n\n#### method\nType: `String`\n\nThe HTTP method name – it must be uppercase!\n\n#### url\nType: `String` or [`URL`](https://nodejs.org/api/url.html#url_the_whatwg_url_api)\n\nIf `url` is a string, it is automatically parsed with [`url.parse()`](https://nodejs.org/api/url.html#url_url_parse_urlstring_parsequerystring_slashesdenotehost) into an object.\n\n#### opts.body\nType: `Mixed`<br>\nDefault: `undefined`\n\nThe request's body, can be of any type!\n\nAny non-`Buffer` objects will be converted into a JSON string and the appropriate [`Content-Type`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type) header will be attached.\n\nAdditionally, `httpie` will _always_ set a value for the [`Content-Length`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length) header!\n\n#### opts.headers\nType: `Object`<br>\nDefault: `{}`\n\nThe custom headers to send with your request.\n\n#### opts.redirect\nType: `Boolean`<br>\nDefault: `true`\n\nWhether or not redirect responses should be followed automatically.\n\n> **Note:** This may only happen with a 3xx status _and_ if the response had a [`Location`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location) header.\n\n#### opts.reviver\nType: `Function`<br>\nDefault: `undefined`\n\nAn optional function that's passed directly to [`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Parameters), allowing you transform aspects of the response data before the `httpie` request resolves.\n\n> **Note:** This will _only_ run if `httpie` detects that JSON is contained in the response!\n\n#### opts.timeout\nType: `Integer`<br>\nDefault: `undefined`\n\nThe time, in milliseconds, before automatically terminating the request.\n\nWhen the request exceeds this limit, `httpie` rejects with an `err<Error>`, adding a truthy `err.timeout` value.\n\n> **Important:** There is a slight behavioral difference between the Node & browser versions!<br>\nIn the server, the `timeout` value _does not propagate_ to any redirects.<br>\nIn the browser, the `timeout` value _will not_ reset during redirects.\n\n\n### get(url, opts={})\n> Alias for [`send('GET', url, opts)`](#sendmethod-url-opts).\n\n### post(url, opts={})\n> Alias for [`send('POST', url, opts)`](#sendmethod-url-opts).\n\n### put(url, opts={})\n> Alias for [`send('PUT', url, opts)`](#sendmethod-url-opts).\n\n### patch(url, opts={})\n> Alias for [`send('PATCH', url, opts)`](#sendmethod-url-opts).\n\n### del(url, opts={})\n> Alias for [`send('DELETE', url, opts)`](#sendmethod-url-opts).\n\n\n## Error Handling\n\nAll responses with `statusCode >= 400` will result in a rejected `httpie` request. When this occurs, an Error instance is formatted with complete information:\n\n* `err.message` – `String` – Identical to `err.statusMessage`;\n* `err.statusMessage` – `String` – The response's `statusMessage` value;\n* `err.statusCode` – `Number` – The response's `statusCode` value;\n* `err.headers` – `Object` – The response's `headers` object;\n* `err.data` – `Mixed` – The response's payload;\n\nAdditionally, errors that are a result of a timeout expiration will have a truthy `err.timeout` value.\n\n> **Important:** The error's `data` property may also be parsed to a JSON object, according to the response's headers.\n\n```js\nimport { get } from 'httpie';\n\nget('https://example.com/404').catch(err => {\n  console.error(`(${err.statusCode}) ${err.message}`)\n  console.error(err.headers['content-type']);\n  console.error(`~> ${err.data}`);\n});\n//=> \"(404) Not Found\"\n//=> \"text/html; charset=UTF-8\"\n//=> ~> <?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\\n<!DOCTYPE html ...</body>\\n</html>\n```\n\n## License\n\nMIT © [Luke Edwards](https://lukeed.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lukeed/httpie.git"
  },
  "scripts": {
    "build": "npm run build:node && npm run build:client",
    "build:client": "bundt src/browser.js --unpkg --browser",
    "build:node": "bundt src/index.js --main --module",
    "pretest": "npm run build",
    "test": "tape -r esm test/*.js | tap-spec"
  },
  "types": "httpie.d.ts",
  "unpkg": "dist/httpie.min.js",
  "version": "2.0.0-next.2"
}
